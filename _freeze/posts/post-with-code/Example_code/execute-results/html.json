{
  "hash": "60147e393baa515293ae4e514e66ff81",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"End-to-end demo: weighted UniFrac on IBD 16S data\"\n#author: \"Zihan Zhu, Yiqian Zhang, Wenhao Li and Liangliang Zhang\"\ndate: \"2025-06-10\"\ncategories: [code, analysis]\nimage: \"DSC09100.jpg\"\n---\n\nThis is a post with executable code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install Betadiag (dev) and dependencies ---------------------------------\n# install.packages(\"devtools\")\nlibrary(devtools)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: usethis\n```\n\n\n:::\n\n```{.r .cell-code}\n#devtools::install_github(\"bioscinema/Betadiag\")\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Using GitHub PAT from the git credential store.\n\n## Skipping install of 'Betadiag' from a github remote, the SHA1 (bf9bbd2c) has not changed since last install.\n##   Use `force = TRUE` to force installation\n```\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Using GitHub PAT from the git credential store.\n\n## Skipping install of 'Betadiag' from a github remote, the SHA1 (bf9bbd2c) has not changed since last install.\n##   Use `force = TRUE` to force installation\nlibrary(Betadiag)\nlibrary(phyloseq)\nlibrary(ggplot2)\n\n# Load dataset ------------------------------------------------------------\nload(\"RealData/IBD_16s_data_V4.RData\")\n\n# ---- Data cleaning ------------------------------------------------------\nsample_data <- sample_data(phy1)\nrows_with_na <- apply(\n  sample_data[, c(1, 18, 50, 57, 115, 126, 127)],\n  1,\n  function(x) any(x %in% c(\"not providednot provided\",\n                           \"-88\",\n                           \"not provided\",\n                           \"cd (from uc 7/17/2018)\"))\n)\nphyseq <- prune_samples(!rows_with_na, phy1)\n\nmetadata <- data.frame(\n  diagnosis         = as.factor(physeq@sam_data$diagnosis),\n  age_at_diagnosis  = as.numeric(physeq@sam_data$age_at__diagnosis),\n  host_age          = as.numeric(physeq@sam_data$host_age),\n  host_height       = as.numeric(physeq@sam_data$host_height),\n  race              = physeq@sam_data$race,\n  sex               = as.numeric(ifelse(physeq@sam_data$sex == \"male\", 1, 0)),\n  smoking           = as.numeric(ifelse(physeq@sam_data$smoking == \"n\", 0, 1))\n)\n\n# ---- Diagnostics --------------------------------------------------------\nwu_dist   <- phyloseq::distance(physeq, method = \"wunifrac\")\nwu_matrix <- as.matrix(wu_dist)\n\nwu.check <- check_distance(wu_matrix)\nwu.check$is.metric\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.check$is.Euclidean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.check$FNI\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1180882\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(wu.check$collinearity.score,xlab = \"Sample\",ylab = \"Collinearity Score\") \n```\n\n::: {.cell-output-display}\n![](Example_code_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nCollinearity plot – Every point sits at ≈ −1, meaning each sample’s distance vector is almost perfectly anti-parallel to the average vector. In practice, this indicates very little pairwise collinearity, so angle-preserving (metric) ordinations shouldn’t be distorted by redundant information.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(wu.check$nonlinearity.score,xlab = \"Sample\",ylab = \"Nonlinearity Score\") \n```\n\n::: {.cell-output-display}\n![](Example_code_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nNon-linearity plot – Scores vary widely, with several pronounced spikes, showing substantial non-linear distortion across samples. Linear methods such as classical PCoA may mis-represent true relationships; non-linear embeddings (t-SNE, UMAP) or a PSD remedy are advisable before interpretation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ---- Baseline evaluation ------------------------------------------------\nwu.evalution <- evaluate_beta(\n  wu_matrix,\n  as.data.frame(metadata[, 1]),  # Y\n  as.data.frame(metadata[, -1]), # Z\n  metadata\n)\nwu.evalution$PCo1.rate\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1474114\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.evalution$PCo2.rate\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.08727701\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.evalution$PCoA.valid\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.evalution$pseudo_F\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9864256\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.evalution$pseudo_R2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.07595821\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.evalution$permanova_p\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4914915\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.evalution$MiRKAT_R2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.01034452\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ---- Remedies -----------------------------------------------------------\n# Higham projection\nwu.higham           <- remedy_gram(wu_matrix, method = \"Higham\")\nwu.higham.evalution <- evaluate_beta_gram(\n  wu.higham,\n  as.data.frame(metadata[, 1]),\n  as.data.frame(metadata[, -1]),\n  metadata\n)\nwu.higham.evalution$PCo1.rate\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1671499\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.higham.evalution$PCo2.rate\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.09896342\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.higham.evalution$PCoA.valid\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.higham.evalution$pseudo_F\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.113382\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.higham.evalution$pseudo_R2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.08490423\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.higham.evalution$permanova_p\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2082082\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.higham.evalution$MiRKAT_R2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.01202306\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.higham.euclidean <- euclidean_check(wu.higham)\nwu.higham.euclidean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$FNI\n[1] 0\n\n$is.Euclidean\n[1] 1\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Tikhonov ridge (ε = 0)\nwu.tik           <- remedy_gram(wu_matrix, method = \"Tikhonov\", epsilon = 0)\nwu.tik.evalution <- evaluate_beta_gram(\n  wu.tik,\n  as.data.frame(metadata[, 1]),\n  as.data.frame(metadata[, -1]),\n  metadata\n)\nwu.tik.evalution$PCo1.rate\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.01749814\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.tik.evalution$PCo2.rate\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.01244613\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.tik.evalution$PCoA.valid\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.tik.evalution$pseudo_F\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.069095\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.tik.evalution$pseudo_R2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.08180331\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.tik.evalution$permanova_p\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3623624\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.tik.evalution$MiRKAT_R2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.005982887\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwu.tik.euclidean <- euclidean_check(wu.tik)\nwu.tik.euclidean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$FNI\n[1] 0\n\n$is.Euclidean\n[1] 1\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ---- Quick comparison table --------------------------------------------\ndata.frame(\n  Matrix      = c(\"Raw\", \"Higham\", \"Tikhonov\"),\n  Euclidean   = c(wu.check$is.Euclidean,\n                  wu.higham.euclidean$is.Euclidean,\n                  wu.tik.euclidean$is.Euclidean),\n  Pseudo_R2   = c(wu.evalution$pseudo_R2,\n                  wu.higham.evalution$pseudo_R2,\n                  wu.tik.evalution$pseudo_R2),\n  PERM_pval   = c(wu.evalution$permanova_p,\n                  wu.higham.evalution$permanova_p,\n                  wu.tik.evalution$permanova_p)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Matrix Euclidean  Pseudo_R2 PERM_pval\n1      Raw         0 0.07595821 0.4914915\n2   Higham         1 0.08490423 0.2082082\n3 Tikhonov         1 0.08180331 0.3623624\n```\n\n\n:::\n:::\n\n\n\n",
    "supporting": [
      "Example_code_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}